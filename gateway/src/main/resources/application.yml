server:
  port: 8080

spring:
  application:
    name: api-gateway

  boot:
    admin:
      client:
        url: http://localhost:9090
        username: admin
        password: admin
        instance:
          management-base-url: http://localhost:8080

  cloud:
    gateway:
      routes:
        - id: padel-service
          uri: http://localhost:8584
          predicates:
            - Path=/padel/**
          filters:
            - StripPrefix=1
        - id: cinema-service
          uri: http://localhost:8583
          predicates:
            - Path=/cinema/**
          filters:
            - StripPrefix=1
        - id: sushi-service
          uri: http://localhost:8582
          predicates:
            - Path=/sushi/**
          filters:
            - StripPrefix=1
        - id: convert-service
          uri: http://localhost:8700
          predicates:
            - Path=/convert/**
          filters:
            - StripPrefix=1
            - AddRequestHeader=Authorization, Bearer 123456789
        - id: travels-service
          uri: http://localhost:8581
          predicates:
            - Path=/travels/**
          filters:
            - StripPrefix=1
        - id: mc-service
          uri: http://localhost:8585
          predicates:
            - Path=/mc/**
          filters:
            - StripPrefix=1


  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost:8590/realms/keycloak"

management:
  endpoints:
    web:
      exposure:
        include: health, info
      base-path: /actuator
  endpoint:
    health:
      show-details: always
